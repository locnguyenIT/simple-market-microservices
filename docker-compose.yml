version: "3.8"
services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - "3307:3306"
    volumes:
      - data:/var/lib/mysql
    networks:
      - mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
    restart: unless-stopped
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring
      - monitoring
  rabbitmq:
    image: rabbitmq:3.9.20-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    depends_on:
      - eureka-server
      - gateway
      - customer
      - orders
      - product
      - payment
      - notification
    restart: unless-stopped
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring
    depends_on:
      - prometheus
      - grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
  eureka-server:
    image: ntloc/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - monitoring
    depends_on:
      - zipkin
  gateway:
    image: ntloc/gateway:latest
    container_name: gateway
    ports:
      - "8080:8080"
    networks:
      - spring
      - monitoring
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - eureka-server
  customer:
    image: ntloc/customer:latest
    container_name: customer
    ports:
      - "8010:8010"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - mysql
      - monitoring
    depends_on:
      - eureka-server
      - gateway
      - mysql
      - zipkin
      - rabbitmq
  product:
    image: ntloc/product:latest
    container_name: product
    ports:
      - "8020:8020"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - mysql
      - monitoring
    depends_on:
      - eureka-server
      - gateway
      - mysql
      - zipkin
      - rabbitmq
  orders:
    image: ntloc/orders:latest
    container_name: orders
    ports:
      - "8030:8030"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - mysql
      - monitoring
    depends_on:
      - eureka-server
      - gateway
      - mysql
      - zipkin
      - rabbitmq
  payment:
    image: ntloc/payment:latest
    container_name: payment
    ports:
      - "8040:8040"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - mysql
      - monitoring
    depends_on:
      - eureka-server
      - gateway
      - mysql
      - zipkin
      - rabbitmq
  notification:
    image: ntloc/notification:latest
    container_name: notification
    ports:
      - "8050:8050"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - mysql
      - monitoring
    depends_on:
      - eureka-server
      - gateway
      - mysql
      - zipkin
      - rabbitmq
networks:
  spring:
    driver: bridge
  mysql:
    driver: bridge
  monitoring:
    driver: bridge
volumes:
  data:
  prometheus_data: {}

